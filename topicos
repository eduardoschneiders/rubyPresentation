- versionamento (rvm)

	1.9.2
	1.9.3

-para gerenciar temos o RVM

	Instalar, manusear e trabalhar (install, change and upgrade)


	(Ruby, Gems and IRB)

Instalação
	-install packages (require later)
		sudo apt-get update
		sudo apt-get install build-essential <b>git-core curl</b>

	Lastest RVM
		bash -s stable < <(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer)
		echo '[[ -s "$HOME/.rvm/scripts/rvm" ]] && source "$HOME/.rvm/scripts/rvm"' >> ~/.bashrc
		. ~/.bashrc

	- install essential packages 
		sudo apt-get install build-essential openssl libreadline6 libreadline6-dev curl git-core zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-0 libsqlite3-dev sqlite3 libxml2-dev libxslt-dev autoconf libc6-dev ncurses-dev automake libtool bison subversion

Ruby instalation
	rvm install 1.9.3
	ruby -v
	rvm --default use 1.9.3

- Gemsets
	
	new 2 projects

	oldVersion
		file .rvmrc
		rvm use 1.8.7@oldVersion
		rvm gemset create oldVersion

	newVersion
		file .rvmrc
		rvm use 1.9.3@newVersion
		rvm gemset create newVersion

gem install haml
gem list
rvm list


Isolated projects
	


	



linguagem interpretada

Everything is object
	true, nil, false

IRB
	Object
		Numeric
			Integer
				Fixnum
				Bignum
			float
		String
		Symbol
		Array
		Hash
		Regexp

	1
	1,5
	"This is String".class
	:name
	[1, "asfsd", [1, 2]]
	{"RS" => 10_914_128, "SC" => 6_248_436, "PR" => 10_439_601}

	Contactening strings 
	puts "isso eh um teste de #{teste}"

	explain the diference bettwen hash -> array
		array nao tem key
		hash custom key



	var = "vazio"
	var.empty? 	# => false


	class String
		def empty?
			self == "vazio" || self == ""
		end
	end

	class String
		def twoTimes
			self + self
		end
	end

	"eduardo".twoTimes
	1.twoTimes

	s